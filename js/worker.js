importScripts('cn.js'); // imports the cn.js "glue" script generated by emscripten

// webassembly cryptonight is called here.
var hash = Module.cwrap('hash_cn', 'string', ['string', 'string', 'number'])

function zeroPad(num, places) {
	var zero = places - num.toString().length + 1;
	return Array(+(zero > 0 && zero)).join("0") + num;
}

function int2hex(i) {
	return (zeroPad(i.toString(16), 8)).match(/[a-fA-F0-9]{2}/g).reverse().join('');
}

var increm = 0;
var job_id = 0;
var job_done = false;
onmessage = function (e) {
	// console.log('onmessage', e);

	var jbthrt = e.data;
	var job = jbthrt.job;
	var thrt = jbthrt.throttle;

	var bsuccess = false;
	var res = "";
	var hexnonce = 0;
	// calculate a cryptonight hash
	var calcHash = function () {
		if (job !== null) {
			if (job_id != job.job_id) {
				increm = jbthrt.w_start;
				job_done = false;
				job_id = job.job_id; // assign one time
			}
			try {
				res = hash(job.blob, job.target, increm);
				if (increm == jbthrt.w_stop) {
					job_done = true;
				}
				hexnonce = int2hex(increm);
				bsuccess = (res != "");
				increm++;
			}
			catch (err) {
				console.log(err);
			}
		}
	};

	// submit a cryptonight hash
	var submit = function () {
		if (bsuccess) {
			var msg = {
				type: "submit",
				params: {
					job_id: job.job_id,
					nonce: hexnonce,
					result: res
				}
			};
			postMessage(JSON.stringify(msg));
		} else if (job_done) {
			postMessage("kill");
		} else {
			postMessage("nothing");
		}
	};

	if (thrt === 0) {
		calcHash();
		submit();
	} 
	else 
	{
		// method 1
		var t0 = performance.now();
		calcHash();
		var dt = performance.now() - t0;
		var timePerHash = dt - t0;		
		var throttleWait = 1 / (1 - thrt);
		var sleept = Math.min(2e3, timePerHash * throttleWait);

		// method 2
		// var t0 = performance.now();
		// calcHash();
		// var dt = performance.now() - t0;
		// var sleept = Math.round(thrt / (100 - thrt + 10) * dt);

		setTimeout(submit, sleept);
	}
};